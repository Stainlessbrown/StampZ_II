name: Build StampZ AppImage

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-appimage:
    runs-on: ubuntu-22.04  # Use Ubuntu 22.04 (20.04 was deprecated in May 2024)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build Linux executable first
      run: |
        # Build using your existing spec file
        python -m PyInstaller stampz.spec
        echo "Linux build completed. Checking dist directory:"
        ls -la dist/
        
    - name: Create desktop file
      run: |
        mkdir -p AppDir
        cat > AppDir/StampZ.desktop << EOF
        [Desktop Entry]
        Type=Application
        Name=StampZ
        Comment=Digital watermarking tool
        Exec=StampZ
        Icon=StampZ
        Categories=Graphics;Photography;
        Terminal=false
        EOF
        
    - name: Prepare AppImage structure
      run: |
        # Copy the executable
        cp dist/StampZ AppDir/StampZ
        chmod +x AppDir/StampZ
        
        # Copy icon (use your 256px PNG)
        cp resources/StampZ_256.png AppDir/StampZ.png
        
        # Create AppRun script
        cat > AppDir/AppRun << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        export PATH="${HERE}:${PATH}"
        exec "${HERE}/StampZ" "$@"
        EOF
        chmod +x AppDir/AppRun
        
        echo "AppDir structure:"
        find AppDir -type f -exec ls -la {} \;
        
    - name: Download and run appimagetool
      run: |
        # Download appimagetool
        wget -O appimagetool-x86_64.AppImage https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        
        # Extract and run appimagetool (works without FUSE)
        ./appimagetool-x86_64.AppImage --appimage-extract
        ./squashfs-root/AppRun AppDir StampZ_linux-x64.AppImage
        
        # Make it executable
        chmod +x StampZ_linux-x64.AppImage
        
        echo "AppImage created:"
        ls -la StampZ_linux-x64.AppImage
        
        # Test that it exists and is executable
        file StampZ_linux-x64.AppImage
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: StampZ_linux-x64-AppImage
        path: StampZ_linux-x64.AppImage
