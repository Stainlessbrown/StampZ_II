name: Build StampZ Linux (Ubuntu 18.04 Compatible)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux-ubuntu18:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build in Ubuntu 18.04 Docker container
      run: |
        docker run --rm -v "$PWD":/workspace -w /workspace ubuntu:18.04 bash -c "
          # Set timezone to avoid interactive prompts
          export DEBIAN_FRONTEND=noninteractive
          export TZ=UTC
          ln -snf /usr/share/zoneinfo/UTC /etc/localtime
          echo UTC > /etc/timezone
          
          # Update package lists
          apt-get update
          
          # Install Python 3.6 and development tools + PIL dependencies
          apt-get install -y python3 python3-pip python3-dev python3-tk tk-dev build-essential libffi-dev \
            libjpeg-dev libpng-dev libtiff-dev libfreetype6-dev liblcms2-dev libopenjp2-7-dev \
            zlib1g-dev libwebp-dev
          
          # Upgrade pip and setuptools (use compatible versions)
          python3 -m pip install --upgrade 'pip<22' 'setuptools<60' 'wheel<0.38'
          
          # Force all packages to build from source (no pre-compiled wheels)
          export PIP_NO_BINARY=':all:'
          
          # Install PIL/Pillow from source with system dependencies
          echo 'Installing Pillow from source with system dependencies...'
          pip3 install 'Pillow==8.4.0' --no-binary=Pillow --verbose
          
          # Install other requirements from source
          echo 'Installing other requirements from source...'
          pip3 install --no-binary=':all:' -r requirements.txt --verbose
          
          # Install compatible PyInstaller version
          echo 'Installing PyInstaller 4.10 (Ubuntu 18.04 compatible)...'
          pip3 install 'pyinstaller==4.10' --no-binary=pyinstaller
          
          # Create and run import test script
          echo 'Testing imports...'
          echo 'import sys' > test_imports.py
          echo 'print(\"Python version:\", sys.version)' >> test_imports.py
          echo 'try:' >> test_imports.py
          echo '    import tkinter' >> test_imports.py
          echo '    print(\"tkinter: OK\")' >> test_imports.py
          echo 'except ImportError as e:' >> test_imports.py
          echo '    print(\"tkinter: FAILED -\", e)' >> test_imports.py
          echo 'try:' >> test_imports.py
          echo '    import PIL' >> test_imports.py
          echo '    print(\"PIL: OK\")' >> test_imports.py
          echo 'except ImportError as e:' >> test_imports.py
          echo '    print(\"PIL: FAILED -\", e)' >> test_imports.py
          python3 test_imports.py
          
          # Build using spec file with verbose output
          echo 'Running PyInstaller...'
          python3 -m PyInstaller stampz.spec --log-level DEBUG
          
          # Show what PyInstaller created
          echo 'PyInstaller output:'
          ls -la dist/
          
          # Rename for Ubuntu 18.04 compatibility (one-file executable)
          if [ -f dist/StampZ ]; then
            mv dist/StampZ dist/StampZ_linux-x64-ubuntu18
            echo 'Renamed StampZ to StampZ_linux-x64-ubuntu18'
          else
            echo 'ERROR: dist/StampZ not found!'
            ls -la dist/
            exit 1
          fi
          
          # Show final result
          echo 'Build completed. Final contents:'
          ls -la dist/
          
          # Check GLIBC dependencies in detail
          echo 'GLIBC dependencies:'
          ldd dist/StampZ_linux-x64-ubuntu18 | grep libc || echo 'Static binary or no libc dependency shown'
          
          # Check what GLIBC versions are required
          echo 'Required GLIBC versions:'
          objdump -T dist/StampZ_linux-x64-ubuntu18 | grep GLIBC | sort -u || echo 'No GLIBC symbols found'
          
          # Verify Ubuntu 18.04 compatibility by testing in fresh container
          echo 'Testing Ubuntu 18.04 compatibility...'
          docker run --rm -v \"\$PWD/dist\":/test ubuntu:18.04 bash -c '
            # Install minimal runtime dependencies
            apt-get update
            apt-get install -y python3-tk libgtk2.0-0 libx11-6 libxrender1 libxext6 libxft2
            
            # Test if the binary can at least start
            echo "Testing if StampZ_linux-x64-ubuntu18 can execute..."
            /test/StampZ_linux-x64-ubuntu18 --version 2>&1 || echo "Binary test completed (exit code: \$?)"
            
            # Check GLIBC availability on Ubuntu 18.04
            echo "Available GLIBC version in Ubuntu 18.04:"
            ldd --version | head -1
          '
        "
    
    - name: Upload Ubuntu 18.04 compatible executable
      uses: actions/upload-artifact@v4
      with:
        name: StampZ_linux-x64-ubuntu18
        path: dist/StampZ_linux-x64-ubuntu18
