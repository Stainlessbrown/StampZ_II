name: Build StampZ Linux (Ubuntu 18.04 Compatible)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux-ubuntu18:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build in Ubuntu 18.04 Docker container
      run: |
        docker run --rm -v "$PWD":/workspace -w /workspace ubuntu:18.04 bash -c "
          # Set timezone to avoid interactive prompts
          export DEBIAN_FRONTEND=noninteractive
          export TZ=UTC
          ln -snf /usr/share/zoneinfo/UTC /etc/localtime
          echo UTC > /etc/timezone
          
          # Update package lists
          apt-get update
          
          # Install Python 3.6 and development tools + PIL dependencies
          apt-get install -y python3 python3-pip python3-dev python3-tk tk-dev build-essential libffi-dev \
            libjpeg-dev libpng-dev libtiff-dev libfreetype6-dev liblcms2-dev libopenjp2-7-dev \
            zlib1g-dev libwebp-dev
          
          # Upgrade pip and setuptools
          python3 -m pip install --upgrade pip setuptools wheel
          
          # Install PIL/Pillow first with proper dependencies
          echo 'Installing Pillow with system dependencies...'
          pip3 install Pillow --verbose
          
          # Install other requirements
          echo 'Installing other requirements...'
          pip3 install -r requirements.txt --verbose
          
          # Install PyInstaller
          echo 'Installing PyInstaller...'
          pip3 install pyinstaller
          
          # Verify Python can import main modules
          echo 'Testing imports...'
          python3 -c 'import tkinter; print("tkinter OK")'
          python3 -c 'import PIL; print("PIL OK")'
          python3 -c 'import sys; print("Python version: " + sys.version)'
          
          # Build using spec file with verbose output
          echo 'Running PyInstaller...'
          python3 -m PyInstaller stampz.spec --log-level DEBUG
          
          # Show what PyInstaller created
          echo 'PyInstaller output:'
          ls -la dist/
          
          # Rename for Ubuntu 18.04 compatibility (one-file executable)
          if [ -f dist/StampZ ]; then
            mv dist/StampZ dist/StampZ_linux-x64-ubuntu18
            echo 'Renamed StampZ to StampZ_linux-x64-ubuntu18'
          else
            echo 'ERROR: dist/StampZ not found!'
            ls -la dist/
            exit 1
          fi
          
          # Show final result
          echo 'Build completed. Final contents:'
          ls -la dist/
          
          # Check GLIBC dependency
          echo 'GLIBC dependencies:'
          ldd dist/StampZ_linux-x64-ubuntu18 | grep libc || echo 'Static binary or no libc dependency shown'
        "
    
    - name: Upload Ubuntu 18.04 compatible executable
      uses: actions/upload-artifact@v4
      with:
        name: StampZ_linux-x64-ubuntu18
        path: dist/StampZ_linux-x64-ubuntu18
